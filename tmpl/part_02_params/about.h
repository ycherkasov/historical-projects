/*
Глава 8 Джосаттиса
Шаблоны объединений. 
Члены шаблонов: функции, вложенные классы, статические члены
Виртуальные функции. Связывание шаблонов. Первичные и вторичные шаблоны.
Параметры шаблонов: типовые, нетиповые, шаблонные
*/

/*
Вопросы:
1.SFINAE, пример стр.131
*/

/*
Резюме:
I  Аргументы шаблонов
1. Аргументы шаблонов функций задаются 
   - явно <int, int>
   - именем класса (type_t a; X<a>)
   - по умолчанию
   - вывод аргументов (неявное определение аргументов шаблона, <>)
2. Нектоторые аргументы шаблонов функций невозможно получить путем вывода (тип возвращаемого значения).
3. При перегрузке шаблонных функций не всгда можно определить конкретную даже путем 
   полной подстановки аргументов (неоднозначность).
4. Аргументами типов не могут быть:
   - Локальные классы и перечисления (объвленные в пределах функции)
   - Неименованные классы и перечисления (кроме именованных через typedef)
5. Наборы аргументов шаблонов эквивалентны друг другу если они попарно идентичны на этапе компиляции

II Шаблоны и друзья.
1. Объявление дружественной функции может быть единстренным объявлением объекта 
   (т.е. кроме как в классе нигде не видна)
2. Объявление дружественной функции м.б. определением.
3. Объявление дружественных классов не может быть определением.
4. Можно объявлять дружественным конкретный экземпляр шаблона.
5. Дружественный шаблон должен быть видим в точке объявления, в отличие от класса
6. Возможно определение дружественного шаблона и частного экземпляра шаблона
7. Важно - в шаблонном классе нельзя определять дружественную функцию,
   иначе это вызовет нарушение ODR

III Нетиповые параметры
1. Нетиповые параметы могут представлять собой:
   - Целочисленный тип, в т.ч. enum
   - Указатели с внешним связыванием ()
   - Ссылки с внешним связыванием.
2. Не могут быть static и mutable, параметры const и volatile игнорируются. Всегда являются rvalue.
3. С нетиповым параметром-указателем может фигурировать ключевое слово typename,
   если в параметре используется тип (typename allocator<T>::alloc*)

IV SFINAE

V Шаблонные параметры шаблона
1. Шаблонный параметр определяется ключевым словом class
2. Имя внутри параметров шаблонного параметра шаблона не может быть использовано в шаблоне
3. Если имя шаблонного параметра шаблона нигде не используется, его можно опустить
4. Шаблонный параметр шаблона, имеющий параметры по умолчанию, должен повторять их в списке параметров
5. Аргумент шаблонного параметра шаблона в самом шаблоне использовать нельзя  

VI Шаблоны-члены и члены шаблонов
1. Шаблоны могут включать обычные и шаблонные методы, обычные и шаблонные классы, 
   виртуальные нешаблонные методы, статические члены.
2. В отличие от классов, для шаблонов не допускается совпадание имен с другими объектами.
3. Шаблоны не могут иметь соглашения по вызову extern "C", но могут иметь 
   нестандартные соглашения по вызову extern "X".
4. Шаблоны имеют внешнее связывание, кроме объявленных как static
*/