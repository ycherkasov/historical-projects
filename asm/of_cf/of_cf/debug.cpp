

int main()
{
	__asm
	{
		pushf;
		mov esp,edi;

		call clean;
		mov al, 00111111b  ;	//Нет ни переполнения,ни переноса 
		mov bl, 00000001b  ;	//7-й бит: стал равен 0
								//; перенос в 7-й бит: нет 
		add al, bl;				//Вынос за разрядную сетку - нет 

		call clean;
		mov al, 11111101b  ;//Перенос есть,переполнения нет 
		mov bl, 00000101b  ;//7-й бит: стал равен 0
							//; перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - есть 
		//  253 + 5 = 2 (неверно)
		// ИЛИ  -3 + 5 = 2 (верно) 

		call clean;
		mov al, 11111100b  ;//Перенос есть,переполнения нет 
		mov bl, 00000101b  ;//7-й бит: стал равен 0
							//; перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - есть 
		// 252 + 5 = 1 (неверно) ИЛИ   -4 + 5 = 1 (верно) 

		call clean;
		mov al, 01000000b  ;//Перенос есть,переполнения нет 
		mov bl, 11000000b  ;//7-й бит: стал равен 0
							//перенос в 7-й бит: есть 
		add al, bl   		 ;//Вынос за разрядную сетку - есть 
		//; 64 + 192 = 0 (неверно) ИЛИ  64 - 64 = 0 (верно) 

		call clean;
		mov al, 11100000b  ;//Перенос есть,переполнения нет 
		mov bl, 01100000b  ;//7-й бит: стал равен 0
		//; перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - есть 
		//; 224 + 96 = 64 (неверно) ИЛИ  -32 + 96 = 64 (верно) 

		call clean;
		mov al, 01100000b  ;//Перенос есть,переполнения нет 
		mov bl, 11100000b  ;//7-й бит: стал равен 0
		//; перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - есть  
		//; 96 + 224 = 64 (неверно) ИЛИ  96 - 32 = 64 (верно) 

		call clean;
		mov al, 11100000b  ;//Перенос есть,переполнения нет 
		mov bl, 11100000b  ;//7-й бит: стал равен 1; перенос в 7-й бит:есть 
		add al, bl         ;//Вынос за разрядную сетку - есть 
		// 224 + 224 = 192 (неверно) ИЛИ  -32 - 32 = -64(верно) 

		call clean;
		mov al, 11000000b  ;//Перенос есть,переполнения нет 
		mov bl, 11000000b  ;//7-й бит: стал равен 1
		//; перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - есть 
		// 192 + 192 = 128 (неверно) ИЛИ -64 - 64 = -128(верно) 

		call clean;
		mov al, 11111111b  ;//Перенос есть,переполнения нет 
		mov bl, 00000001b  ;//7-й бит: стал равен 0
		//; перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - есть 
		// 255 + 1 = 0 (неверно) ИЛИ -1 + 1 = 0 (верно) 

		call clean;
		mov al, 11111111b  ;//Перенос есть,переполнения нет 
		mov bl, 10000001b  ;//7-й бит: стал равен 1
		//перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - есть 
		// 255 + 129 = 128 (неверно) ИЛИ -1 - 127 = -128 (верно) 

		call clean;
		mov al, 11111111b  ;//Перенос есть,переполнения нет 
		mov bl, 11000001b  ;//7-й бит: стал равен 1; перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - есть 
		// 255 + 193 = 192 (неверно) ИЛИ -1 - 63 = -64 (верно) 

		call clean;
		mov al, 11111111b  ;//Перенос есть,переполнения нет 
		mov bl, 01000001b  ;//7-й бит: стал равен 0; перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - есть 
		// 255 + 65 = 64 (неверно) ИЛИ  -1 + 65 = 64 (верно) 

		call clean;
		mov al, 01000000b  ;//Переполнение есть,переноса нет 
		mov bl, 01000000b  ;//7-й бит: стал равен 1; перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - нет 
		// 64 + 64 = 128 (верно) ИЛИ  +64 + +64 = -128(неверно) 

		call clean;
		mov al, 01100000b  ;//Переполнение есть,переноса нет 
		mov bl, 01100000b  ;//7-й бит: стал равен 1; перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - нет 
		// 96 + 96 = 192 (верно) ИЛИ +96 + +96 = -64 (неверно) 

		call clean;
		mov al, 01111111b  ;//Переполнение есть,переноса нет 
		mov bl, 00000001b  ;//7-й бит: стал равен 1; перенос в 7-й бит: есть 
		add al, bl         ;//Вынос за разрядную сетку - нет 
		// 127 + 1 = 128 (верно) ИЛИ +127 + +1 = -128 (неверно) 

		call clean;
		mov al, 10000000b  ;//Есть и перенос,и переполнение 
		mov bl, 10000000b  ;//7-й бит: стал равен 0; перенос в 7-й бит: нет 
		add al, bl         ;//Вынос за разрядную сетку - есть 
		// 128 + 128 = 0 (неверно) ИЛИ -128 - 128 = 0 (неверно)

		popf;
		mov edi,esp;
		call exit_pr;

clean:
		xor eax,eax;
		xor ebx,ebx;
		ret;
exit_pr:

		
		
	}
	return 0;
};